Root    ?= ../../../.. ;
Location = prog/engine/phys/physJolt ;

TargetType  = lib ;
Target      = engine/phys/physJolt.lib ;
PlatformArch_windows ?= x86_64 ;

include $(Root)/prog/_jBuild/defaults.jam ;

AddIncludes =
  $(Root)/prog/engine/sharedInclude
  $(Root)/prog/3rdPartyLibs/phys/joltPhysics
  $(Root)/prog/gameLibs/publicInclude # FIXME_BROKEN_DEP
;


Sources =
  joltPhysics.cpp
  joltPhysObject.cpp
  joltPhysRagdoll.cpp
  joltPhysSysInst.cpp
  joltDbgRender.cpp
  shapes/HeightField16Shape.cpp
;

UseProgLibs =
  engine/phys/physCommon
  3rdPartyLibs/phys/joltPhysics
  gameLibs/render/dynmodelRenderer # FIXME_BROKEN_DEP
  engine/heightMapLand
;

CPPopt = -DUSE_JOLT_PHYSICS ;

if $(Platform) = linux || $(PlatformSpec) = clang {
  if $(Platform) in windows xboxOne scarlett {
    CPPopt += -fp:fast ;
    if $(PlatformArch) != arm64 { CPPopt += /clang:-fno-unsafe-math-optimizations ; }
  } else {
    CPPopt += -fno-unsafe-math-optimizations ;
  }
} else if $(SSEVersion) = 0 { CPPopt += /arch:SSE2 ; } # msvc windows-x86 implied

include $(Root)/prog/3rdPartyLibs/phys/joltPhysics/setup.jam ;
include $(Root)/prog/_jBuild/build.jam ;
