Root ?= ../../.. ;
Location = prog/tools/consoleSq ;
include $(Root)/prog/tools/tools_setup.jam ;
ConsoleExe = yes ;

if $(Config) = rel
{
  PlatformSpec ?= clang ;
  MemLib ?= memory/mimallocMem ;
}

if $(Config) = rel { ForceLogs ?= yes ; } else { ForceLogs = ; }
if $(Config) = rel { ForcePdb = yes ; }

StrictCompile = yes ;
include $(Root)/prog/_jBuild/defaults.jam ;

# Config = dbg ;

UseQuirrel = sq3r+ ;
ProjectUseQuirrel = sq3r+ ;

TargetType  = exe ;
Target      = util/csq ;
include $(Root)/prog/tools/tools_setup_outdir_util.jam ;

AddIncludes =
  $(Root)/prog/3rdPartyLibs/jsoncpp/include
  $(Root)/prog/gameLibs/publicInclude
  $(Root)/prog/gameLibs/publicInclude/quirrel
;

AddLibs =
;

if $(Platform) in windows {
  AddLibs += Shell32.lib ;
}

Sources =
  consoleSq.cpp
  scriptapi.cpp
  fs_utils.cpp
  con_main.cpp
;

WorkCyclePerfStub = yes ;
if $(Platform) = linux {
  WorkCyclePerfStub = no ;
}

UseProgLibs =
  engine/osApiWrappers
  engine/kernel
  engine/ioSys
  engine/startup
  engine/baseUtil
  engine/coreUtil
  engine/math
  engine/consoleProc
  engine/perfMon/daProfilerStub
  engine/workCycle
  engine/lib3d
  engine/drv/drv3d_stub

  3rdPartyLibs/eastl
  3rdPartyLibs/libb64

  gameLibs/quirrel/bindQuirrelEx
  gameLibs/quirrel/quirrel_json
  gameLibs/quirrel/sqModules
  gameLibs/quirrel/http
  gameLibs/quirrel/frp
  gameLibs/quirrel/sqJwt
  gameLibs/quirrel/base64

  gameLibs/asyncHTTPClient
;

if $(MemLib) { UseProgLibs += engine/$(MemLib) ; } else { UseProgLibs += engine/memory ; }

if $(Platform) = linux {
  UseProgLibs +=
    engine/osApiWrappers/messageBox/stub
    engine/workCycle/stub
  ;
}


if [ GLOB $(Root)/prog/gameLibs/yup_parse : jamfile ] {
  UseProgLibs += gameLibs/yup_parse gameLibs/quirrel/yupfile_parse ;
  CPPopt += -DHAS_YUP_PARSE ;
}
if [ GLOB $(Root)/prog/gameLibs/charServerClient : jamfile ] {
  UseProgLibs += gameLibs/charServerClient/sqBindings gameLibs/charServerClient/httpWrapperAsync ;
  CPPopt += -DHAS_CHARSQ ;
}

include $(Root)/prog/_jBuild/build.jam ;
