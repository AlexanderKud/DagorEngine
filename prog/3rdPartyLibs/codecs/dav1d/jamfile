Root    ?= ../../../.. ;
Location = prog/3rdPartyLibs/codecs/dav1d ;

include $(Root)/prog/_jBuild/defaults.jam ;

TargetType  = lib ;
Target      = 3rdPartyLibs/codecs/dav1d.lib ;

AddIncludes = 
  $(Root)/$(Location)
  $(Root)/$(Location)/src
  $(Root)/$(Location)/generated
  $(Root)/$(Location)/include
  $(Root)/$(Location)/include/common
  $(Root)/$(Location)/include/dav1d
  $(Root)/$(Location)/tools
;
if $(PlatformArch) = x86_64 && $(Platform) in windows xboxOne scarlett {
  AddIncludes += $(Root)/$(Location)/generated/win64 ;
}

if $(Platform)-$(PlatformArch) = windows-x86 {
  AddIncludes += $(Root)/$(Location)/generated/win32 ;
} else if $(Platform)-$(PlatformArch) = windows-arm64 {
  AddIncludes += $(Root)/$(Location)/generated/windows_arm64 ;
}

if $(Platform) = macOS {
  if $(PlatformArch) = arm64 {
    AddIncludes += $(Root)/$(Location)/generated/macosx_arm64 ;
  } else {
    AddIncludes += $(Root)/$(Location)/generated/macosx_x86_64 ;
  }
}

if $(Platform) in iOS tvOS {
  AddIncludes += $(Root)/$(Location)/generated/macosx_arm64 ;
}

if $(Platform) in ps4 ps5 {
  AddIncludes += $(Root)/$(Location)/generated/ps ;
}

if $(Platform) = linux {
  AddIncludes += $(Root)/$(Location)/generated/linux ;
  AddLibs += -lpthread ;
}

if $(Platform) in android nswitch {
  if $(PlatformArch) in arm64 arm64-v8a {
    AddIncludes += $(Root)/$(Location)/generated/android/aarch64 ;
  } else {
    AddIncludes += $(Root)/$(Location)/generated/android/arm ;
  }
}

Sources = ;

AutoscanBuildLists src tools/input : *.c : Sources ;

if $(Platform) in windows xboxOne scarlett && $(PlatformSpec) != clang {
  if $(PlatformSpec) = vc17 { pre_opt on $(Sources) = -I $(Root)/$(Location)/include/compat/msvc ; }
  else { AddIncludes += $(Root)/$(Location)/include/compat/msvc ; }
}

if $(Platform) = linux && $(PlatformSpec) != clang {
  AddIncludes += $(Root)/$(Location)/include/compat/gcc ;
}

if $(Platform) in ps4 ps5 {
  AddIncludes += $(Root)/$(Location)/include/compat/ps ;
}

if ( -D_WIN32_WINNT=0x0501 in $(GlobalCPPopt) ) {
  Exit -D_WIN32_WINNT=0x0501 not supported ;
}

if $(Platform) in windows xboxOne scarlett {
  Sources += src/win32/thread.c ;
}

if $(PlatformArch) in x86 x86_64 {
  AutoscanBuildLists src/x86 : *.asm : Sources : (16_(sse|avx)|filmgrain_common) ;
  AutoscanBuildLists src/x86 : *.c : Sources ;

} else if $(PlatformArch) in arm64 arm64e arm64-v8a && $(PlatformSpec) in clang gcc vc16 vc17 {
  AutoscanBuildLists src/arm/64 : *.S : Sources  ;
  AutoscanBuildLists src/arm : *.c : Sources ;
  if $(Platform) in android nswitch { ASMopt += --target=aarch64-linux-android21 ; }

} else if $(PlatformArch) in armv7 armv7s armeabi-v7a {
  AutoscanBuildLists src/arm/32 : *.S : Sources  ;
  AutoscanBuildLists src/arm : *.c : Sources ;
  if $(Platform) in android { ASMopt += --target=armv7a-linux-androideabi19 ; }
}


if $(Platform)-$(PlatformArch) in windows-x86 macOS-x86_64 {
  ASMopt += --prefix _ ;
} else if ( $(Platform) = macOS && $(PlatformArch) in arm64 ) {
  ASMopt += -DPREFIX -target arm64-apple-macos -mmacosx-version-min=$(MacOSXMinVer) ;
} else if ( $(Platform) in iOS tvOS ) {
  ASMopt += -DPREFIX -target arm64-apple-ios -miphoneos-version-min=$(iOSMinVer) ;
}

Copt += -DBITDEPTH=8 ;

if $(Platform) in windows xboxOne scarlett && $(PlatformSpec) != clang {
  Copt += /wd4028 /wd4244 /wd4267 /wd4996 /wd4090 /wd4133 ;
} else if $(Platform) = linux && $(PlatformSpec) = gcc && $(PlatformArch) = e2k {
  Copt += -w167 -w513 -Wno-bad-initializer-type -Wno-incompatible-pointer-types -Wno-reduced-alignment ;
} else {
  Copt += -Wno-incompatible-pointer-types ;
}

include $(Root)/prog/_jBuild/build.jam ;
