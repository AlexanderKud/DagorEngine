Root    ?= ../../.. ;
Location = prog/3rdPartyLibs/enet ;

include $(Root)/prog/_jBuild/defaults.jam ;

TargetType  = lib ;
Target      = 3rdPartyLibs/enet.lib ;

Sources =
  callbacks.c
  compress.c
  host.c
  list.c
  packet.c
  peer.c
  protocol.c
;

if $(Platform) in windows xboxOne scarlett { Sources += win32.c ; }
if $(Platform) in ps4 ps5 macOS iOS tvOS linux android { Sources += unix.c ; }

AddIncludes = $(Root)/prog/3rdPartyLibs/enet/include ;

if $(Platform) in windows
{
  AddLibs += winmm.lib ws2_32.lib ;
}
else if $(Platform) in ps4 ps5
{
  CPPopt +=
    # options
    -DHAS_SOCKLEN_T -DHAS_INET_NTOP -DHAS_INET_PTON -DHAS_MSGHDR_FLAGS -DSOMAXCONN=128
    # mappings
    -DPF_INET=AF_INET
  ;
}
else if $(Platform) in macOS iOS tvOS linux android
{
  CPPopt +=
    # options
    -DHAS_SOCKLEN_T -DHAS_POLL -DHAS_INET_NTOP -DHAS_INET_PTON -DHAS_MSGHDR_FLAGS -DSOMAXCONN=128
  ;
}
else if $(Platform) in nswitch
{
  Sources += unix.c ;
  Sources += unix_nswitch.cpp ;

  UseProgLibs = 3rdPartyLibs/posix ;

  CPPopt +=
    # options
    -DHAS_SOCKLEN_T -DHAS_FCNTL -DHAS_INET_NTOP -DHAS_INET_PTON -DHAS_MSGHDR_FLAGS -DSOMAXCONN=128
  ;
}

if $(PlatformSpec) in gcc clang {
  CPPopt += -Wno-unused-parameter ;
}

include $(Root)/prog/_jBuild/build.jam ;
