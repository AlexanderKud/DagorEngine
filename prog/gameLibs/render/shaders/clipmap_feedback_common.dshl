include "vtex.dshl"

macro USE_FEEDBACK_PACKER(code)
  hlsl(code) {
    // It can be packed more efficiently but keeping it simple for alignining with TexTileFeedback fields.
    static const uint4 FEEDBACK_BITS = uint4( 8, 8, 8, 8);
    static const uint4 FEEDBACK_SHIFT = uint4(0, FEEDBACK_BITS.x, FEEDBACK_BITS.x + FEEDBACK_BITS.y, FEEDBACK_BITS.x + FEEDBACK_BITS.y + FEEDBACK_BITS.z);
    static const uint4 FEEDBACK_MASK = (1U << FEEDBACK_BITS) - 1U;

    // without dummy clear offset, do NOT use it during UAV feedback filling
    uint packFinalFeedbackInfo(uint2 pos, uint mip, uint ri_offset)
    {
      uint4 data = uint4(ri_offset, pos.y, pos.x, mip);
      data = data << FEEDBACK_SHIFT;
      return uint(data.x | data.y | data.z | data.w);
    }

    uint packFeedbackInfo(uint2 pos, uint mip, uint ri_offset)
    {
      ++ri_offset; // ri_offset == 0 is a dummy clear value for feedback
      return packFinalFeedbackInfo(pos, mip, ri_offset);
    }

    void unpackFeedbackInfo(uint pack, out uint2 pos, out uint mip, out uint ri_offset)
    {
      uint4 data = uint4(pack, pack, pack, pack) >> FEEDBACK_SHIFT;
      data = data & FEEDBACK_MASK;

      pos.x = data.z;
      pos.y = data.y;
      mip = data.w;
      ri_offset = data.x;

      if (ri_offset == 0)
        mip = TEX_MIPS; // invalid mip, invalid data on CPU with only this check
      else
        --ri_offset; // undo dummy clear offset
    }
  }
endmacro