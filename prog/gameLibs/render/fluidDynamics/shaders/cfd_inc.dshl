float4 cfd_world_to_voxel;
float4 cfd_world_to_voxel_height;
texture cfd_voxel_tex;

macro INIT_CFD_CONSTS(code)
  (code) {
    cfd_world_to_voxel@f4 = cfd_world_to_voxel;
    cfd_world_to_voxel_height@f2 = (cfd_world_to_voxel_height.x, cfd_world_to_voxel_height.y, 0, 0);
  }
endmacro

macro INIT_CFD(code)
  (code) {cfd_voxel_tex@smp2d = cfd_voxel_tex;}
  INIT_CFD_CONSTS(code)
endmacro

macro USE_CFD_TC(code)
  hlsl(code) {
    float3 get_cfd_voxel_tc(float3 worldPos)
    {
      float3 tc;
      tc.xy = (worldPos.xz - cfd_world_to_voxel.zw) * cfd_world_to_voxel.xy;
      tc.z = (worldPos.y - cfd_world_to_voxel_height.y) * cfd_world_to_voxel_height.x;
      return tc;
    }
  }
endmacro